name: diplomski

services:
  nginx:
    image: nginx:latest
    ports:
      - '8080:80'
    restart: unless-stopped
    volumes:
      - ./.nginx:/etc/nginx:row
    networks:
      - nginx

  auth:
    build:
      args:
        APP_NAME: auth
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - '3000'
    container_name: auth
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - .local.env
    networks:
      - rabbitmq
      - postgres
      - nginx

  users:
    build:
      args:
        APP_NAME: users
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: users
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - '3000'
    env_file:
      - .local.env
    networks:
      - rabbitmq
      - postgres
      - nginx

  posts:
    build:
      args:
        APP_NAME: posts
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: posts
    restart: unless-stopped
    depends_on:
      - postgres
      - mongo
      - rabbitmq
    ports:
      - '3000'
    env_file:
      - .local.env
    networks:
      - mongo
      - rabbitmq
      - postgres
      - nginx

  files:
    build:
      args:
        APP_NAME: files
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: files
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - '3000'
    env_file:
      - .local.env
    networks:
      - mongo
      - rabbitmq
      - nginx

  chats:
    build:
      args:
        APP_NAME: chats
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: chats
    restart: unless-stopped
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    ports:
      - '3000'
    env_file:
      - .local.env
    networks:
      - mongo
      - redis
      - postgres
      - rabbitmq
      - nginx

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    ports:
      - '5672'
    networks:
      - rabbitmq

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6379'
    networks:
      - redis

  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: example
      POSTGRES_DB: diplomski
    ports:
      - '5432:5432'
    networks:
      - postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  mongo:
    image: mongo
    restart: unless-stopped
    # environment:
    # MONGO_INITDB_ROOT_USERNAME: diplomski
    # MONGO_INITDB_ROOT_PASSWORD: example
    # MONGO_INITDB_DATABASE: diplomski
    ports:
      - '27017'
    networks:
      - mongo
    volumes:
      - mongo:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - '28081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      # ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      # ME_CONFIG_MONGODB_AUTH_USERNAME: diplomski
      # ME_CONFIG_MONGODB_AUTH_PASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: changeme
      ME_CONFIG_OPTIONS_EDITORTHEME: shadowfox
    depends_on:
      - mongo
    networks:
      - mongo

volumes:
  postgres:
    name: postgres-db
  mongo:
    name: mongo-db

networks:
  rabbitmq:
  postgres:
  mongo:
  nginx:
  redis:
